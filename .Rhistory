abb<-c("UP",'TN','RAJ')
region<-c("north","east","west")
population<c("20.4","3.68","9.9")
totalmurder<-c("363637","238724","23472348")
df<-data.frame(state,abb,region,population,totalmurder)
population<c("20.4","3.68","9.9")
population<c("20.4","3.68","9.9")
pop<c("20.4","3.68","9.9")
pop<c("20.4","3.68","9.9")
totalmurder<-c("363637","238724","23472348")
pop<c("20.4","3.68","9.9")
pop<c("20.4","3.68","9.9")
population<-c("20.4","3.68","9.9")
totalmurder<-c("363637","238724","23472348")
df<-data.frame(state,abb,region,population,totalmurder)
min(murders[,5])
?min
max(murders[,5])
max(df[,5])
paste(c(2,3,4,5), c("%","^"),sep=",",collapse="")
paste(c(2,3,4,5), c("%","^"),sep="",collapse=",")
## ------------------------------------------------------------------------
ggplot(mtcars,aes(y=mpg,x=factor(am)))+geom_jitter(aes(color=factor(am)))
library(ggplot2)
library(reshape2)
#from mtcars
p = ggplot(mtcars, aes(x=wt, y=mpg))
p+geom_boxplot()
## ------------------------------------------------------------------------
ggplot(mtcars,aes(y=mpg,x=factor(am)))+geom_jitter(aes(color=factor(am)))
library(ggplot2)
p <- ggplot(mtcars, aes(mpg))
p + geom_histogram(fill = "blue", binwidth = 10)
?geom_histogram
install.packages("swirl")
library(swirl)
install_from_swirl("Statistical Interference")
install_from_swirl("Statistical Inference")
swirl()
33/36
1
deck
52
4/52
0
1/4
16/52
12/52
3/12
2/12
2/51
0.64
0.64
1
mypdf
integrate(mypdf,0,1.6)
0.16
0.5
0.25
1
info()
skip
1
1
1.41
1.414
0.5
0.64
1.28
0.32
0.25
info()
skip
skip()
1
0.0997
0.0997
0.00099
0.000997
98.49015
0.002997
0.014985
333.67
0.06238268
3.5
1
expect_dice()
omnitest(correctExpr='expect_dice')
qadw
1
expect_dice
dice_high
expect_dice(dice_high)
expect_dice(dice_low)
1
.5*(edh+edl)
integrate(myfunc,0,2)
1
spop
mean(spop)
allsam
mean(smeans)
apply(allsam,1,mean)
mean(smeans)
MyMat = matrix(c(7, 9, 8, 6, 10, 12),nrow=2,ncol=3, byrow = TRUE)
View(MyMat)
MyMat[,3]
View(MyMat)
xvect<-c(1,2,3)
xvect[2] <- "2"
xvect
dat<-read.csv("airline.csv")
setwd("~/Desktop/project")
dat<-read.csv("airline.csv")
library(tidyverse)
#DATA PREPARATION
colSums(is.na(dat))
da<-unique(dat$City1)
print(da)
dat$City1<-as.factor(dat$City1)
View(dat)
dat$City1<-as.factor(dat$City1)
typeof(dat$City1)
dat<-read.csv("airline.csv")
library(tidyverse)
#DATA PREPARATION
colSums(is.na(dat))
typeof(dat$City1)
da<-unique(dat$City1)
print(da)
dat$City1<-as.factor(dat$City1)
typeof(dat$City1)
da2<-unique(dat$City2)
dat$City2<-as.factor(dat$City2)
typeof(dat$City2)
coplot(dat)
airline<-cor(dat)
airline <- dat %>%
select(3:12)
airl<-cor(airline)
coplot(airl)
corrplot(airl)
install.packages("corrplot")
library(corrplot)
corrplot(airl)
airl<-cor(dat)
dat<-read.csv("airline.csv")
library(tidyverse)
#DATA PREPARATION
colSums(is.na(dat))
airline <- dat %>%
select(3:12)
airl<-cor(airl)
airl<-cor(airline)
library(corrplot)
corrplot(airl)
set.seed(123)
split<-sample.split(dat$RPKs,SplitRatio=0.8)
install.packages("caTools")
library(caTools)
set.seed(123)
split<-sample.split(dat$RPKs,SplitRatio=0.8)
training_set<-subset(dat,split=TRUE)
test_set<-subset(dat,split=FALSE)
#FEATURE SCALING
training_set[,3:12]<-scale(training_set[,3:12])
test_set[,3:12]<-scale(test_set[,3:12])
#REGRESSION
regressor<-lm(formula = RPKs~Passanger_Trips+Aircraft_Trips+Seats+ASKs,data = training_set)
#REGRESSION
regressor<-lm(formula = RPKs~Passenger_Trips+Aircraft_Trips+Seats+ASKs,data = training_set)
summary(regressor)
y_pred<-predict(regressor,newdata = test_set)
y_pred
View(test_set)
dat<-read.csv("airline.csv")
airline <- dat %>%select(3:12)
airl<-cor(airline)
library(corrplot)
corrplot(airl)
library(caTools)
set.seed(123)
split<-sample.split(dat$RPKs,SplitRatio=0.8)
training_set<-subset(dat,split=TRUE)
test_set<-subset(dat,split=FALSE)
#REGRESSION
regressor<-lm(formula = RPKs~Passenger_Trips+Aircraft_Trips+Seats+ASKs,data = training_set)
summary(regressor)
y_pred<-predict(regressor,newdata = test_set)
y_pred
mean(regressor$residuals)
cor(dat$RPKs,dat$Passenger_Trips)
cor(dat$RPKs,dat$Aircraft_Trips)
library(olssr)
library(olsrr)
install.packages("olssr")
install.packages("olsrr")
library(olsrr)
ols_plot_resid_hist(regressor)
corrplot(airl)
unique(dat$City1)
name<-unique(dat$City1)
)
dat$City1=factor(dat$City1,
levels =name,
labels =c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30)
)
View(dat)
name2<-unique(dat$City2)
labels = c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27)
View(dat)
name2<-unique(dat$City2)
labels = c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27)
View(dat)
dat<-read.csv("airline.csv")
library(tidyverse)
#DATA PREPARATION
colSums(is.na(dat))
name<-unique(dat$City1)
View(dat)
dat$City1=factor(dat$City1,
levels =name,
labels =c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30)
)
View(dat)
name2<-unique(dat$City2)
dat$City2=factor(dat$City2,
levels = name2,
labels = c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27)
)
View(dat)
airl<-cor(dat)
View(dat)
airl<-correlate(dat)
airline<-date %>%
select(3:12)
airline<-date %>%select(3:12)
airline<-dat %>%select(3:12)
airl<-correlate(airline)
airl<-cor(airline)
library(corrplot)
corrplot(air)
cor(dat$RPKs,dat$Aircraft_Trips)
cor(dat$RPKs,dat$Passenger_Trips)
cor(dat$RPKs,dat$ASKs)
cor(dat$RPKs,dat$Seats)
library(caTools)
set.seed(123)
split<-sample.split(dat$RPKs,SplitRatio=0.8)
training_set<-subset(dat,split=TRUE)
test_set<-subset(dat,split=FALSE)
#REGRESSION
regressor<-lm(formula = RPKs~Passenger_Trips+Aircraft_Trips+Seats+ASKs,data = training_set)
summary(regressor)
#checks for valid regression model
mean(regressor$residuals)
ols_plot_resid_hist(regressor)
y_pred<-predict(regressor,newdata = test_set)
#VISUALISING
plot(regressor)
library(car)
durbinWatsonTest(regressor)
dat<-read.csv("airline.csv")
library(tidyverse)
#DATA PREPARATION
colSums(is.na(dat))
name<-unique(dat$City1)
dat$City1=factor(dat$City1,
levels =name,
labels =c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30)
)
name2<-unique(dat$City2)
dat$City2=factor(dat$City2,
levels = name2,
labels = c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27)
)
airline<-dat %>%select(3:12)
airl<-cor(airline)
library(corrplot)
corrplot(air)
corrplot(airl)
cor(dat$RPKs,dat$Aircraft_Trips)
cor(dat$RPKs,dat$Passenger_Trips)
cor(dat$RPKs,dat$Seats)
cor(dat$RPKs,dat$ASKs)
library(caTools)
set.seed(123)
split<-sample.split(dat$RPKs,SplitRatio=0.8)
training_set<-subset(dat,split=TRUE)
test_set<-subset(dat,split=FALSE)
#REGRESSION
regressor<-lm(formula = RPKs~Passenger_Trips+Aircraft_Trips+Seats+ASKs,data = training_set)
summary(regressor)
#checks for valid regression model
mean(regressor$residuals)
library(olsrr)
ols_plot_resid_hist(regressor)
y_pred<-predict(regressor,newdata = test_set)
View(regressor)
summary(regressor)
y_pred
summary(regressor)
# Visualising the Training set results
library(ggplot2)
ggplot() +
geom_point(aes(x = training_set$Aircraft_Trips, y = training_set$RPKs),
colour = 'red') +
geom_line(aes(x = training_set$Aircraft_Trips, y = predict(regressor, newdata = training_set)),
colour = 'blue') +
ggtitle('Aircraft Trips vs Revenue Per KM (Training set)') +
xlab('Aircraft Trips') +
ylab('Revenue Per KM')
dat<-read.csv("airline.csv")
library(tidyverse)
#DATA PREPARATION
colSums(is.na(dat))
name<-unique(dat$City1)
dat$City1=factor(dat$City1,
levels =name,
labels =c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30)
)
name2<-unique(dat$City2)
dat$City2=factor(dat$City2,
levels = name2,
labels = c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27)
)
airline<-dat %>%select(3:12)
airl<-cor(airline)
library(corrplot)
corrplot(airl)
cor(dat$RPKs,dat$Aircraft_Trips)
cor(dat$RPKs,dat$Passenger_Trips)
cor(dat$RPKs,dat$Seats)
cor(dat$RPKs,dat$ASKs)
library(caTools)
set.seed(123)
split<-sample.split(dat$RPKs,SplitRatio=0.8)
training_set<-subset(dat,split=TRUE)
test_set<-subset(dat,split=FALSE)
#FEARUE SCALING
training_set = scale(training_set)
#FEARUE SCALING
training_set = scale(training_set[3:12])
test_set = scale(test_set[3:12])
#REGRESSION
regressor<-lm(formula = RPKs~Passenger_Trips+Aircraft_Trips+Seats+ASKs,data = training_set)
#REGRESSION
regressor<-lm(formula = RPKs~Passenger_Trips+Aircraft_Trips+Seats+ASKs,data = training_set)
dat<-read.csv("airline.csv")
library(tidyverse)
#DATA PREPARATION
colSums(is.na(dat))
name<-unique(dat$City1)
dat$City1=factor(dat$City1,
levels =name,
labels =c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30)
)
name2<-unique(dat$City2)
dat$City2=factor(dat$City2,
levels = name2,
labels = c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27)
)
airline<-dat %>%select(3:12)
airl<-cor(airline)
library(corrplot)
corrplot(airl)
cor(dat$RPKs,dat$Aircraft_Trips)
cor(dat$RPKs,dat$Passenger_Trips)
cor(dat$RPKs,dat$Seats)
cor(dat$RPKs,dat$ASKs)
library(caTools)
set.seed(123)
split<-sample.split(dat$RPKs,SplitRatio=0.8)
training_set<-subset(dat,split=TRUE)
test_set<-subset(dat,split=FALSE)
#FEARUE SCALING
training_set = scale(training_set[3:12])
View(training_set)
test_set = scale(test_set[3:12])
View(test_set)
#REGRESSION
regressor<-lm(formula = RPKs~Passenger_Trips+Aircraft_Trips+Seats+ASKs,data = training_set)
is.data.frame(training_set)
as.data.frame(training_set)
as.data.frame(training_set)
as.data.frame(test_set)
#REGRESSION
regressor<-lm(formula = RPKs~Passenger_Trips+Aircraft_Trips+Seats+ASKs,data = training_set)
summary(regressor)
dat<-read.csv("airline.csv")
library(tidyverse)
#DATA PREPARATION
colSums(is.na(dat))
name<-unique(dat$City1)
dat$City1=factor(dat$City1,
levels =name,
labels =c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30)
)
name2<-unique(dat$City2)
dat$City2=factor(dat$City2,
levels = name2,
labels = c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27)
)
airline<-dat %>%select(3:12)
airl<-cor(airline)
library(corrplot)
corrplot(airl)
cor(dat$RPKs,dat$Aircraft_Trips)
cor(dat$RPKs,dat$Passenger_Trips)
cor(dat$RPKs,dat$Seats)
cor(dat$RPKs,dat$ASKs)
#SPLITTING THE DATASET
library(caTools)
set.seed(123)
split<-sample.split(dat$RPKs,SplitRatio=0.8)
training_set<-subset(dat,split=TRUE)
test_set<-subset(dat,split=FALSE)
#REGRESSION
regressor<-lm(formula = RPKs~Passenger_Trips+Aircraft_Trips+Seats+ASKs,data = training_set)
summary(regressor)
#checks for valid regression model
mean(regressor$residuals)
library(olsrr)
ols_plot_resid_hist(regressor)
y_pred<-predict(regressor,newdata = test_set)
y_pred
# Visualising the Training set results
library(ggplot2)
ggplot() +
geom_point(aes(x = training_set$Aircraft_Trips, y = training_set$RPKs),
colour = 'red') +
geom_line(aes(x = training_set$Aircraft_Trips, y = predict(regressor, newdata = training_set)),
colour = 'blue') +
ggtitle('Aircraft Trips vs Revenue Per KM (Training set)') +
xlab('Aircraft Trips') +
ylab('Revenue Per KM')
library(ggplot2)
ggplot() +
geom_point(aes(x = test_set$Aircraft_Trips, y = test_set$RPKs),
colour = 'red') +
geom_line(aes(x = training_set$Aircraft_Trips, y = predict(regressor, newdata = training_set)),
colour = 'blue') +
ggtitle('Aircraft Trips vs Revenue per KM(Test set)') +
xlab('Aircraft Trips') +
ylab('Revenue Per KM')
summary(regressor)
View(test_set)
ggplot(training_set,aes(y=RPKs,x=Aircraft_Trips))+geom_point()+geom_smooth(method="lm")
plot(regressor)
dat<-read.csv("airline.csv")
library(tidyverse)
#DATA PREPARATION
colSums(is.na(dat))
name<-unique(dat$City1)
dat$City1=factor(dat$City1,
levels =name,
labels =c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30)
)
name2<-unique(dat$City2)
dat$City2=factor(dat$City2,
levels = name2,
labels = c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27)
)
airline<-dat %>%select(3:12)
airl<-cor(airline)
library(corrplot)
corrplot(airl)
cor(dat$RPKs,dat$Aircraft_Trips)
cor(dat$RPKs,dat$Passenger_Trips)
cor(dat$RPKs,dat$Seats)
cor(dat$RPKs,dat$ASKs)
#SPLITTING THE DATASET
library(caTools)
set.seed(123)
split<-sample.split(dat$RPKs,SplitRatio=0.8)
training_set<-subset(dat,split=TRUE)
test_set<-subset(dat,split=FALSE)
#REGRESSION
regressor<-lm(formula = RPKs~Passenger_Trips+Aircraft_Trips+Seats+ASKs,data = training_set)
summary(regressor)
#residual vs fitted values
plot(regressor)
ols_plot_resid_hist(regressor)
y_pred<-predict(regressor,newdata = test_set)
y_pred
library(ggplot2)
ggplot() +
geom_point(aes(x = training_set$Aircraft_Trips+training_set$Passenger_Trips+training_set$Seats+training_set$ASKs, y = training_set$RPKs),
colour = 'red') +
geom_line(aes(x = training_set$Aircraft_Trips+training_set$Passenger_Trips+training_set$Seats+training_set$ASKs, y = predict(regressor, newdata = training_set)),
colour = 'blue') +
ggtitle('Aircraft Trips vs Revenue Per KM (Training set)') +
xlab('Aircraft Trips') +
ylab('Revenue Per KM')
library(ggplot2)
ggplot() +
geom_point(aes(x = test_set$Aircraft_Trips+test_set$Passenger_Trips+test_set$Seats+test_set$ASKs, y = test_set$RPKs),
colour = 'red') +
geom_line(aes(x = training_set$Aircraft_Trips+training_set$Passenger_Trips+training_set$Seats+training_set$ASKs, y = predict(regressor, newdata = training_set)),
colour = 'blue') +
ggtitle('predictors vs Revenue per KM(Test set)') +
xlab('predictors') +
ylab('Revenue Per KM')
library(ggplot2)
ggplot() +
geom_point(aes(x = training_set$Aircraft_Trips+training_set$Passenger_Trips+training_set$Seats+training_set$ASKs, y = training_set$RPKs),
colour = 'red') +
geom_line(aes(x = training_set$Aircraft_Trips+training_set$Passenger_Trips+training_set$Seats+training_set$ASKs, y = predict(regressor, newdata = training_set)),
colour = 'blue') +
ggtitle('Predictora vs Revenue Per KM (Training set)') +
xlab('Predictors') +
ylab('Revenue Per KM')
